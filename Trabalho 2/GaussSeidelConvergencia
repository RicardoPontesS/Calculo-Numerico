import numpy as np

# Função para verificar o critério de Sassenfeld
def criterio_sassenfeld(matriz):
    n = len(matriz)  # Tamanho da matriz
    betas = np.zeros(n)  # Inicializa um array de betas com zeros

    for i in range(n):  # Loop sobre as linhas da matriz
        soma_absolutos = np.sum(np.abs(matriz[i, :i]))  # Soma dos valores absolutos fora da diagonal principal
        if matriz[i, i] != 0:  # Verifica se o elemento da diagonal principal não é zero
            beta = soma_absolutos / np.abs(matriz[i, i])  # Calcula o beta para a linha atual
            betas[i] = beta  # Armazena o beta calculado
            if beta >= 1:  # Verifica se o critério de Sassenfeld é violado
                return False, betas  # Retorna falso se o critério for violado

    return True, betas  # Retorna verdadeiro se o critério for atendido para todas as linhas

# Matriz A
A = np.array([[1, 0, 0, 0, 0],
              [5, 34, 12, 0, 0],
              [0, 12, 52, 14, 0],
              [0, 0, 14, 30, 1],
              [0, 0, 0, 0, 1]])

# Verifica se o método de Gauss-Seidel converge para a matriz A
converge, betas = criterio_sassenfeld(A)

if converge:
    print("O método de Gauss-Seidel converge para a matriz.")
    print("Betas:", betas)  # Imprime os valores de beta para cada linha
else:
    print("O método de Gauss-Seidel não converge para a matriz.")
    print("Betas:", betas)  # Imprime os valores de beta para cada linha

