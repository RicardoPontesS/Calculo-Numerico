import numpy as np

A = np.array([[1, 0, 0, 0, 0],
              [5, 34, 12, 0, 0],
              [0, 12, 52, 14, 0],
              [0, 0, 14, 30, 1],
              [0, 0, 0, 0, 1]])

b = np.array([[0],
              [(-3.36)/(20)],
              [(2.28)/(28)],
              [(4.32)/(14)],
              [0]])

# Número máximo de iterações
max_iter = 100

# Tolerância para convergência
tolerancia = 1e-7

# Inicialização do vetor de solução
x = np.zeros_like(b)

# Iterações do método de Gauss-Seidel
for iteracao in range(max_iter):
    for i in range(len(b)):
        x[i] = (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:])) / A[i, i]
    if np.all(np.abs(np.dot(A, x) - b) < tolerancia):
        print("Iterações realizadas: ", iteracao)
        break

print("Solução aproximada:")
print(x)
